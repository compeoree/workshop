
# Sorted dome test 2016/06/08 19:01:44

# Frequency: 2
# Radius: 30.0
#Vertices: 36
V = [
	[   0.000,    0.000,   30.000], #  0 0-0
	[  15.772,    0.000,   25.520], #  1 1-0
	[   4.874,   15.000,   25.520], #  2 1-1
	[ -12.760,    9.270,   25.520], #  3 1-2
	[ -12.760,   -9.270,   25.520], #  4 1-3
	[   4.874,  -15.000,   25.520], #  5 1-4
	[  20.646,   15.000,   15.772], #  6 2-0
	[  -7.886,   24.270,   15.772], #  7 2-1
	[ -25.520,    0.000,   15.772], #  8 2-2
	[  -7.886,  -24.270,   15.772], #  9 2-3
	[  20.646,  -15.000,   15.772], # 10 2-4
	[  26.833,    0.000,   13.416], # 11 3-0
	[   8.292,   25.520,   13.416], # 12 3-1
	[ -21.708,   15.772,   13.416], # 13 3-2
	[ -21.708,  -15.772,   13.416], # 14 3-3
	[   8.292,  -25.520,   13.416], # 15 3-4
	[  28.532,    9.270,    0.000], # 16 4-0
	[  17.634,   24.271,    0.000], # 17 4-1
	[   0.000,   30.000,    0.000], # 18 4-2
	[ -17.634,   24.271,    0.000], # 19 4-3
	[ -28.532,    9.271,    0.000], # 20 4-4
	[ -28.532,   -9.270,    0.000], # 21 4-5
	[ -17.634,  -24.271,    0.000], # 22 4-6
	[   0.000,  -30.000,    0.000], # 23 4-7
	[  17.634,  -24.271,    0.000], # 24 4-8
	[  28.532,   -9.270,    0.000], # 25 4-9
	[  21.708,   15.772,  -13.416], # 26 5-0
	[  -8.292,   25.520,  -13.416], # 27 5-1
	[ -26.833,    0.000,  -13.416], # 28 5-2
	[  -8.292,  -25.520,  -13.416], # 29 5-3
	[  21.708,  -15.772,  -13.416], # 30 5-4
	[  25.520,    0.000,  -15.772], # 31 6-0
	[   7.886,   24.271,  -15.772], # 32 6-1
	[ -20.646,   15.000,  -15.772], # 33 6-2
	[ -20.646,  -15.000,  -15.772], # 34 6-3
	[   7.886,  -24.271,  -15.772]  # 35 6-4
        ]

# Edges: 95
E = [
	[ 0,  1,   16.400, "-"], #   0
	[ 1,  2,   18.540, "-"], #   1
	[ 2,  0,   16.400, "-"], #   2
	[ 1, 11,   16.400, "-"], #   3
	[11,  6,   16.400, "-"], #   4
	[ 6,  1,   18.540, "-"], #   5
	[ 6,  2,   18.540, "-"], #   6
	[ 6, 12,   16.400, "-"], #   7
	[12,  2,   16.400, "-"], #   8
	[ 2,  3,   18.540, "-"], #   9
	[ 3,  0,   16.400, "-"], #  10
	[12,  7,   16.400, "-"], #  11
	[ 7,  2,   18.540, "-"], #  12
	[ 7,  3,   18.540, "-"], #  13
	[ 7, 13,   16.400, "-"], #  14
	[13,  3,   16.400, "-"], #  15
	[ 3,  4,   18.540, "-"], #  16
	[ 4,  0,   16.400, "-"], #  17
	[13,  8,   16.400, "-"], #  18
	[ 8,  3,   18.540, "-"], #  19
	[ 8,  4,   18.540, "-"], #  20
	[ 8, 14,   16.400, "-"], #  21
	[14,  4,   16.400, "-"], #  22
	[ 4,  5,   18.540, "-"], #  23
	[ 5,  0,   16.400, "-"], #  24
	[14,  9,   16.400, "-"], #  25
	[ 9,  4,   18.540, "-"], #  26
	[ 9,  5,   18.540, "-"], #  27
	[ 9, 15,   16.400, "-"], #  28
	[15,  5,   16.400, "-"], #  29
	[ 5,  1,   18.540, "-"], #  30
	[15, 10,   16.400, "-"], #  31
	[10,  5,   18.540, "-"], #  32
	[10,  1,   18.540, "-"], #  33
	[10, 11,   16.400, "-"], #  34
	[ 6, 16,   18.540, "-"], #  35
	[16, 11,   16.400, "-"], #  36
	[12, 17,   16.400, "-"], #  37
	[17,  6,   18.540, "-"], #  38
	[17, 16,   18.540, "-"], #  39
	[17, 26,   16.400, "-"], #  40
	[26, 16,   16.400, "-"], #  41
	[17, 18,   18.540, "-"], #  42
	[18, 12,   16.400, "-"], #  43
	[26, 32,   16.400, "-"], #  44
	[32, 17,   18.540, "-"], #  45
	[32, 18,   18.540, "-"], #  46
	[32, 27,   16.400, "-"], #  47
	[27, 18,   16.400, "-"], #  48
	[ 7, 18,   18.540, "-"], #  49
	[13, 19,   16.400, "-"], #  50
	[19,  7,   18.540, "-"], #  51
	[19, 18,   18.540, "-"], #  52
	[19, 27,   16.400, "-"], #  53
	[19, 20,   18.540, "-"], #  54
	[20, 13,   16.400, "-"], #  55
	[27, 33,   16.400, "-"], #  56
	[33, 19,   18.540, "-"], #  57
	[33, 20,   18.540, "-"], #  58
	[33, 28,   16.400, "-"], #  59
	[28, 20,   16.400, "-"], #  60
	[ 8, 20,   18.540, "-"], #  61
	[14, 21,   16.400, "-"], #  62
	[21,  8,   18.540, "-"], #  63
	[21, 20,   18.540, "-"], #  64
	[21, 28,   16.400, "-"], #  65
	[21, 22,   18.540, "-"], #  66
	[22, 14,   16.400, "-"], #  67
	[28, 34,   16.400, "-"], #  68
	[34, 21,   18.540, "-"], #  69
	[34, 22,   18.540, "-"], #  70
	[34, 29,   16.400, "-"], #  71
	[29, 22,   16.400, "-"], #  72
	[ 9, 22,   18.540, "-"], #  73
	[15, 23,   16.400, "-"], #  74
	[23,  9,   18.540, "-"], #  75
	[23, 22,   18.540, "-"], #  76
	[23, 29,   16.400, "-"], #  77
	[23, 24,   18.540, "-"], #  78
	[24, 15,   16.400, "-"], #  79
	[29, 35,   16.400, "-"], #  80
	[35, 23,   18.540, "-"], #  81
	[35, 24,   18.540, "-"], #  82
	[35, 30,   16.400, "-"], #  83
	[30, 24,   16.400, "-"], #  84
	[10, 24,   18.540, "-"], #  85
	[11, 25,   16.400, "-"], #  86
	[25, 10,   18.540, "-"], #  87
	[25, 24,   18.540, "-"], #  88
	[25, 30,   16.400, "-"], #  89
	[16, 25,   18.540, "-"], #  90
	[26, 31,   16.400, "-"], #  91
	[31, 16,   18.540, "-"], #  92
	[31, 25,   18.540, "-"], #  93
	[31, 30,   16.400, "-"]  #  94
        ]

# Faces: 60
F = [
	[ 0,  1,  2], #  0 
	[ 1, 11,  6], #  1 
	[ 1,  6,  2], #  2 
	[ 2,  6, 12], #  3 
	[ 0,  2,  3], #  4 
	[ 2, 12,  7], #  5 
	[ 2,  7,  3], #  6 
	[ 3,  7, 13], #  7 
	[ 0,  3,  4], #  8 
	[ 3, 13,  8], #  9 
	[ 3,  8,  4], # 10 
	[ 4,  8, 14], # 11 
	[ 0,  4,  5], # 12 
	[ 4, 14,  9], # 13 
	[ 4,  9,  5], # 14 
	[ 5,  9, 15], # 15 
	[ 0,  5,  1], # 16 
	[ 5, 15, 10], # 17 
	[ 5, 10,  1], # 18 
	[ 1, 10, 11], # 19 
	[11,  6, 16], # 20 
	[ 6, 12, 17], # 21 
	[ 6, 17, 16], # 22 
	[16, 17, 26], # 23 
	[12, 17, 18], # 24 
	[17, 26, 32], # 25 
	[17, 32, 18], # 26 
	[18, 32, 27], # 27 
	[12,  7, 18], # 28 
	[ 7, 13, 19], # 29 
	[ 7, 19, 18], # 30 
	[18, 19, 27], # 31 
	[13, 19, 20], # 32 
	[19, 27, 33], # 33 
	[19, 33, 20], # 34 
	[20, 33, 28], # 35 
	[13,  8, 20], # 36 
	[ 8, 14, 21], # 37 
	[ 8, 21, 20], # 38 
	[20, 21, 28], # 39 
	[14, 21, 22], # 40 
	[21, 28, 34], # 41 
	[21, 34, 22], # 42 
	[22, 34, 29], # 43 
	[14,  9, 22], # 44 
	[ 9, 15, 23], # 45 
	[ 9, 23, 22], # 46 
	[22, 23, 29], # 47 
	[15, 23, 24], # 48 
	[23, 29, 35], # 49 
	[23, 35, 24], # 50 
	[24, 35, 30], # 51 
	[15, 10, 24], # 52 
	[10, 11, 25], # 53 
	[10, 25, 24], # 54 
	[24, 25, 30], # 55 
	[11, 16, 25], # 56 
	[16, 26, 31], # 57 
	[16, 31, 25], # 58 
	[25, 31, 30]  # 59 
        ]

# Edge types: 2
ET = [
	[16.4, 1, 1, 0, 0, 50], #0 
	[18.54, 2, 0, 1, 0, 45] #1 
        ]


from sortedome import *

hl = HubLable(V, F)
for i in range(0, 3):
        print(i, hl.Hub[i])

a = hl.Hub[0]
a3d = Hub3D(a, 5)
a3d.compute_vectors()

for v in a3d.Vector:
        print(v[0], v[1])

